\documentclass[a4paper]{article}
%\VignetteIndexEntry{m61r base_r}
%\VignettePackage{m61r}

\setlength{\parindent}{0in}
\setlength{\parskip}{.1in}
\setlength{\textwidth}{140mm}
\setlength{\oddsidemargin}{10mm}

\title{dplyr-and-tidyr-like functions written in base r}
\author{pv71u98h1}

\begin{document}
\maketitle

\section{Introduction}
\label{sec:intro}
R-package m61r gathers functions similar to the ones present in dplyr and tidyr, but only written in base r, and without requiring any dependencies.\newline
The purpose of this package is informative.\newline
All the functions only work with data.frames.

<<echo=FALSE, results=hide>>=
library(m61r)
@

\section{filter}
\label{sec:filter}

<<edit1, eval=TRUE>>=
tmp <- filter_(CO2,~Plant=="Qn1")
head(tmp)

@

<<edit2, eval=TRUE>>=
tmp <- filter_(CO2,~Type=="Quebec")
head(tmp)

@

\section{select}
\label{sec:select}

<<edit3, eval=TRUE>>=
tmp <- select_(CO2,~Type)
head(tmp)

@

<<edit4, eval=TRUE>>=
tmp <- select_(CO2,~c(Plant,Type))
head(tmp)

@

<<edit5, eval=TRUE>>=
tmp <- select_(CO2,~-Type)
head(tmp)

@

<<edit6, eval=TRUE>>=
tmp <- select_(CO2,variable=~-(Plant:Treatment))
head(tmp)

@

\section{mutate/transmutate}
\label{sec:mutate-transmutate}

<<edit7, eval=TRUE>>=
tmp <- mutate_(CO2,z=~conc/uptake)
head(tmp)

@

<<edit8, eval=TRUE>>=
tmp <- mutate_(CO2,mean=~mean(uptake))
head(tmp)

@

<<edit9, eval=TRUE>>=
tmp <- mutate_(CO2,z1=~uptake/conc,y=~conc/100)
head(tmp)

@

<<edit10, eval=TRUE>>=
tmp <- transmutate_(CO2,z2=~uptake/conc,y2=~conc/100)
head(tmp)

@

\section{summarise}
\label{sec:summarise}

<<edit11, eval=TRUE>>=
tmp <- summarise_(CO2,mean=~mean(uptake),sd=~sd(uptake))
tmp

@

<<edit12, eval=TRUE>>=
tmp <- summarise_(CO2, group=~c(Type,Treatment),mean=~mean(uptake),sd=~sd(uptake))
tmp

@

\section{arrange/desange}
\label{sec:arrange-desange}

<<edit13, eval=TRUE>>=
tmp <- arrange_(CO2,~c(conc))
head(tmp)

@

<<edit14, eval=TRUE>>=
tmp <- arrange_(CO2,~c(Treatment,conc,uptake))
head(tmp)

@

<<edit15, eval=TRUE>>=
tmp <- desange_(CO2,~c(Treatment,conc,uptake))
head(tmp)

@

\section{join}
\label{sec:join}

<<edit16, eval=TRUE>>=
authors <- data.frame(
             surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
             nationality = c("US", "Australia", "US", "UK", "Australia"),
             deceased = c("yes", rep("no", 4)))

books <- data.frame(
           name = I(c("Tukey", "Venables", "Tierney","Ripley",
                 "Ripley", "McNeil", "R Core")),
           title = c("Exploratory Data Analysis",
                 "Modern Applied Statistics ...",
                 "LISP-STAT",
                 "Spatial Statistics", "Stochastic Simulation",
                 "Interactive Data Analysis",
                 "An Introduction to R"),
            other.author = c(NA, "Ripley", NA, NA, NA, NA,"Venables & Smith"))
@

\subsection{inner join}
\label{sec:inner-join}

<<edit17, eval=TRUE>>=
<<edit16>>
tmp <- inner_join_(authors,books, by.x = "surname", by.y = "name")
tmp

@

\subsection{left join}
\label{sec:left-join}

<<edit18, eval=TRUE>>=
<<edit16>>
tmp <- left_join_(authors,books, by.x = "surname", by.y = "name")
tmp

@

\subsection{right join}
\label{sec:right-join}

<<edit19, eval=TRUE>>=
<<edit16>>

tmp <- right_join_(authors,books, by.x = "surname", by.y = "name")
tmp

@

\subsection{full join}
\label{sec:full-join}

<<edit20, eval=TRUE>>=
<<edit16>>
tmp <- full_join_(authors,books, by.x = "surname", by.y = "name")
tmp

@

\subsection{semi join}
\label{sec:semi-join}
<<edit21, eval=TRUE>>=
<<edit16>>
tmp <- semi_join_(authors,books, by.x = "surname", by.y = "name")
tmp

@

\subsection{anti join}
\label{sec:semi-join}
<<edit22, eval=TRUE>>=
<<edit16>>
tmp <- anti_join_(authors,books, by.x = "surname", by.y = "name")
tmp

tmp <- anti_join_(books,authors, by.x = "name", by.y = "surname")
tmp

@

\section{reshape: merge/spread}
\label{sec:reshape}

\subsection{merge}
\label{sec:merge}

<<edit23, eval=TRUE>>=
df3 <- data.frame(id = 1:4,
                  age = c(40,50,60,50),
                  dose.a1 = c(1,2,1,2),
                  dose.a2 = c(2,1,2,1),
                  dose.a14 = c(3,3,3,3))

df3

gather_(df3,pivot = c("id","age"))

@

\subsection{spread}
\label{sec:spread}
<<edit24, eval=TRUE>>=
<<edit23>>
df4 <- gather_(df3,pivot = c("id","age"))
df5 <- rbind(df4,
  data.frame(id=5, age=20,parameters="dose.a14",values=8),
  data.frame(id=6, age=10,parameters="dose.a1",values=5))

df5

spread_(df5,col_name="parameters",col_values="values",pivot=c("id","age"))
@
\end{document}
